#!/bin/bash

# ==============================================================================
# LinAV Suite Cron Installation Script
# ==============================================================================
# This script installs a weekly cron job for the LinAV scanner
# It performs automated scanning of the system on a scheduled basis

set -euo pipefail

# --- Configuration ---
SCRIPT_NAME=$(basename "$0")
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
LINAV_MAIN_SCRIPT="${SCRIPT_DIR}/src/main.sh"
LINAV_CONFIG="${SCRIPT_DIR}/linavcopy.conf"
CRON_JOB_NAME="linav_weekly_scan"
LOG_FILE="/var/log/linav/cron_install.log"

# Default scan configuration
DEFAULT_SCAN_DIR="/"
DEFAULT_MODE="medium"
DEFAULT_TIME="0 2 * * 0"  # Every Sunday at 2:00 AM
DEFAULT_LOG_DIR="/var/log/linav/cron"

# Color codes for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# --- Functions ---

# Logging function
log_message() {
    local level="$1"
    local message="$2"
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    
    # Try to log to file if possible (when running as root)
    if [[ $EUID -eq 0 ]]; then
        # Create log directory if it doesn't exist
        mkdir -p "$(dirname "$LOG_FILE")" 2>/dev/null || true
        
        # Log to file
        echo "[$timestamp] [$level] $message" >> "$LOG_FILE" 2>/dev/null || true
    fi
    
    # Also output to console with colors
    case "$level" in
        "ERROR")
            echo -e "${RED}[ERROR]${NC} $message" >&2
            ;;
        "WARNING")
            echo -e "${YELLOW}[WARNING]${NC} $message"
            ;;
        "SUCCESS")
            echo -e "${GREEN}[SUCCESS]${NC} $message"
            ;;
        "INFO")
            echo -e "${BLUE}[INFO]${NC} $message"
            ;;
        *)
            echo "$message"
            ;;
    esac
}

# Check if script is run as root
check_root() {
    if [[ $EUID -ne 0 ]]; then
        log_message "ERROR" "This script must be run as root to install system cron jobs"
        echo "Please run: sudo $0"
        exit 1
    fi
}

# Validate LinAV installation
validate_installation() {
    log_message "INFO" "Validating LinAV installation..."
    
    if [[ ! -f "$LINAV_MAIN_SCRIPT" ]]; then
        log_message "ERROR" "LinAV main script not found at: $LINAV_MAIN_SCRIPT"
        return 1
    fi
    
    if [[ ! -x "$LINAV_MAIN_SCRIPT" ]]; then
        log_message "WARNING" "Making LinAV main script executable..."
        chmod +x "$LINAV_MAIN_SCRIPT"
    fi
    
    if [[ ! -f "$LINAV_CONFIG" ]]; then
        log_message "WARNING" "LinAV configuration file not found at: $LINAV_CONFIG"
        log_message "INFO" "LinAV will use default configuration"
    fi
    
    log_message "SUCCESS" "LinAV installation validated"
    return 0
}

# Create necessary directories
create_directories() {
    local dirs=(
        "/var/log/linav"
        "/var/log/linav/cron"
        "/var/log/linav/reports"
        "/etc/linav"
    )
    
    for dir in "${dirs[@]}"; do
        if [[ ! -d "$dir" ]]; then
            log_message "INFO" "Creating directory: $dir"
            mkdir -p "$dir"
            chmod 755 "$dir"
        fi
    done
}

# Generate cron job entry
generate_cron_entry() {
    local scan_dir="${1:-$DEFAULT_SCAN_DIR}"
    local mode="${2:-$DEFAULT_MODE}"
    local time="${3:-$DEFAULT_TIME}"
    local log_dir="${4:-$DEFAULT_LOG_DIR}"
    
    cat << EOF
# LinAV Weekly System Scan
# Generated by installcron.sh on $(date)
$time root $LINAV_MAIN_SCRIPT -m "$mode" -l "$log_dir" "$scan_dir" >> /var/log/linav/cron_output.log 2>&1
EOF
}

# Install cron job
install_cron_job() {
    local scan_dir="${1:-$DEFAULT_SCAN_DIR}"
    local mode="${2:-$DEFAULT_MODE}"
    local time="${3:-$DEFAULT_TIME}"
    local log_dir="${4:-$DEFAULT_LOG_DIR}"
    
    local cron_file="/etc/cron.d/$CRON_JOB_NAME"
    
    log_message "INFO" "Installing cron job..."
    log_message "INFO" "Schedule: $time"
    log_message "INFO" "Mode: $mode"
    log_message "INFO" "Scan directory: $scan_dir"
    log_message "INFO" "Log directory: $log_dir"
    
    # Generate cron entry
    generate_cron_entry "$scan_dir" "$mode" "$time" "$log_dir" > "$cron_file"
    
    # Set proper permissions
    chmod 644 "$cron_file"
    chown root:root "$cron_file"
    
    # Restart cron service to reload configuration
    if command -v systemctl &> /dev/null; then
        systemctl reload crond 2>/dev/null || systemctl reload cron 2>/dev/null || true
    elif command -v service &> /dev/null; then
        service cron reload 2>/dev/null || service crond reload 2>/dev/null || true
    fi
    
    log_message "SUCCESS" "Cron job installed successfully at: $cron_file"
}

# Remove existing cron job
remove_cron_job() {
    local cron_file="/etc/cron.d/$CRON_JOB_NAME"
    
    if [[ -f "$cron_file" ]]; then
        log_message "INFO" "Removing existing cron job..."
        rm -f "$cron_file"
        
        # Restart cron service
        if command -v systemctl &> /dev/null; then
            systemctl reload crond 2>/dev/null || systemctl reload cron 2>/dev/null || true
        elif command -v service &> /dev/null; then
            service cron reload 2>/dev/null || service crond reload 2>/dev/null || true
        fi
        
        log_message "SUCCESS" "Cron job removed successfully"
    else
        log_message "INFO" "No existing cron job found"
    fi
}

# Show current cron job status
show_status() {
    local cron_file="/etc/cron.d/$CRON_JOB_NAME"
    
    echo -e "\n${BLUE}=== LinAV Cron Job Status ===${NC}"
    
    if [[ -f "$cron_file" ]]; then
        echo -e "${GREEN}Status: INSTALLED${NC}"
        echo -e "${BLUE}Configuration:${NC}"
        cat "$cron_file"
        
        # Show next run time if possible
        if command -v systemctl &> /dev/null && systemctl is-active crond &>/dev/null; then
            echo -e "\n${BLUE}Cron service: RUNNING${NC}"
        elif command -v systemctl &> /dev/null && systemctl is-active cron &>/dev/null; then
            echo -e "\n${BLUE}Cron service: RUNNING${NC}"
        else
            echo -e "\n${YELLOW}Cron service: UNKNOWN${NC}"
        fi
    else
        echo -e "${RED}Status: NOT INSTALLED${NC}"
    fi
    
    echo ""
}

# Interactive configuration
interactive_config() {
    echo -e "\n${BLUE}=== LinAV Cron Job Interactive Configuration ===${NC}"
    
    # Scan directory
    read -p "Enter directory to scan [$DEFAULT_SCAN_DIR]: " scan_dir
    scan_dir="${scan_dir:-$DEFAULT_SCAN_DIR}"
    
    # Scan mode
    echo "Available modes: light, medium, heavy"
    read -p "Enter scan mode [$DEFAULT_MODE]: " mode
    mode="${mode:-$DEFAULT_MODE}"
    
    # Schedule
    echo "Enter cron schedule (minute hour day month weekday)"
    echo "Examples:"
    echo "  0 2 * * 0    - Every Sunday at 2:00 AM"
    echo "  0 1 * * 1    - Every Monday at 1:00 AM"
    echo "  30 3 1 * *   - First day of every month at 3:30 AM"
    read -p "Enter schedule [$DEFAULT_TIME]: " time
    time="${time:-$DEFAULT_TIME}"
    
    # Log directory
    read -p "Enter log directory [$DEFAULT_LOG_DIR]: " log_dir
    log_dir="${log_dir:-$DEFAULT_LOG_DIR}"
    
    # Confirmation
    echo -e "\n${YELLOW}Configuration Summary:${NC}"
    echo "Scan directory: $scan_dir"
    echo "Mode: $mode"
    echo "Schedule: $time"
    echo "Log directory: $log_dir"
    
    read -p "Install with this configuration? (y/N): " confirm
    if [[ "$confirm" =~ ^[Yy]$ ]]; then
        install_cron_job "$scan_dir" "$mode" "$time" "$log_dir"
    else
        log_message "INFO" "Installation cancelled"
    fi
}

# Show help
show_help() {
    cat << EOF
LinAV Cron Installation Script

USAGE:
    $SCRIPT_NAME [OPTIONS]

OPTIONS:
    -i, --install           Install cron job with default settings
    -c, --configure         Interactive configuration and installation
    -r, --remove            Remove existing cron job
    -s, --status            Show current cron job status
    -h, --help              Show this help message

EXAMPLES:
    $SCRIPT_NAME --install                    Install with defaults
    $SCRIPT_NAME --configure                  Interactive configuration
    $SCRIPT_NAME --remove                     Remove cron job
    $SCRIPT_NAME --status                     Check status

DEFAULT CONFIGURATION:
    Directory: $DEFAULT_SCAN_DIR
    Mode: $DEFAULT_MODE
    Schedule: $DEFAULT_TIME (Every Sunday at 2:00 AM)
    Log directory: $DEFAULT_LOG_DIR

NOTES:
    - This script must be run as root
    - The cron job will run as root user
    - Logs are stored in /var/log/linav/
    - Configuration file: $LINAV_CONFIG

EOF
}

# Main function
main() {
    # Parse command line arguments
    case "${1:-}" in
        -i|--install)
            check_root
            validate_installation
            create_directories
            install_cron_job
            show_status
            ;;
        -c|--configure)
            check_root
            validate_installation
            create_directories
            interactive_config
            show_status
            ;;
        -r|--remove)
            check_root
            remove_cron_job
            ;;
        -s|--status)
            show_status
            ;;
        -h|--help|"")
            show_help
            ;;
        *)
            log_message "ERROR" "Unknown option: $1"
            echo "Use '$SCRIPT_NAME --help' for usage information"
            exit 1
            ;;
    esac
}

# --- Script Entry Point ---
log_message "INFO" "LinAV Cron Installation Script started"
main "$@"
log_message "INFO" "LinAV Cron Installation Script completed"